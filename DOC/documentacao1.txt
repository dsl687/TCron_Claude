NOME: TCron ‚Äì Agendador de Tarefas com Scripts e Terminal Avan√ßado
PACKAGE: com.tcron
VERS√ÉO INICIAL: 1.0
PLATAFORMA: Android 10+ (API 29 at√© 34/35)

==============================
OBJETIVO DO PROJETO
==============================
Desenvolver um aplicativo Android avan√ßado para automa√ß√£o e agendamento de scripts com suporte a permiss√µes root, terminal completo, agendamento de tarefas persistentes e controle do sistema via scripts Shell e Python.

==============================
ABORDAGEM DE DESENVOLVIMENTO
==============================

1. Arquitetura:
----------------
- Padr√£o: Clean Architecture com MVVM
- Camadas: Domain / Data / Presentation
- Separa√ß√£o clara entre l√≥gica, interface e dados
- Inje√ß√£o de depend√™ncia com Hilt

2. Metodologia:
---------------
- Desenvolvimento Iterativo
- Modulariza√ß√£o por funcionalidade
- Testes unit√°rios e instrumentais desde o in√≠cio
- Versionamento com Git

3. Fluxo de Cria√ß√£o:
--------------------
- Planejamento com wireframes e fluxogramas
- Cria√ß√£o de funcionalidades individuais por tela
- Reutiliza√ß√£o de componentes via Jetpack Compose
- Integra√ß√£o de servi√ßos (terminal, agendamentos, scripts)
- Foco em desempenho e seguran√ßa

==============================
TELAS E FUNCIONALIDADES
==============================

1. Tela Inicial:
----------------
- Exibe cards de tarefas
- Filtros por tipo, status, tempo restante
- Bot√£o FAB expandido com op√ß√µes:
  - Criar script Shell
  - Criar script Python
  - Criar agendamento
  - Carregar script (.sh/.py)
  - Abrir terminal

2. Terminal Embutido:
---------------------
- Shell padr√£o: ZSH
- Suporte a comandos Linux completos
- Execu√ß√£o com root e sem root
- Cores ANSI e suporte ao editor nano
- Barra superior com menu ‚ãÆ:
  - Salvar como tarefa
  - Limpar terminal
  - Copiar conte√∫do
- Hist√≥rico e sugest√µes de comandos

3. Tela de Cria√ß√£o de Scripts:
------------------------------
- Editor com syntax highlight (se poss√≠vel)
- Campo de nome, tipo (Shell/Python), descri√ß√£o
- Permiss√µes chmod por grupo
- Modo de teste
- Notifica√ß√µes inteligentes

4. Tela de Agendamento:
-----------------------
- TimePicker e DatePicker
- Repeti√ß√µes:
  - Di√°ria
  - Semanal
  - Mensal
  - Ap√≥s boot
- Dura√ß√£o e atraso configur√°vel
- Executar sempre ativo / √∫nico

5. Tela de Dashboard:
---------------------
- Gr√°ficos com MPAndroidChart
- Execu√ß√µes por tarefa
- Falhas
- Tempo m√©dio
- Consumo de CPU/RAM/Bateria

6. Tela de Configura√ß√µes:
-------------------------
- Tema: Claro / Escuro / Amoled
- Idioma
- Biometria
- Permiss√µes root
- Terminal: shell padr√£o, ativa√ß√£o autom√°tica
- Diret√≥rio base para scripts

==============================
FRAMEWORKS E BIBLIOTECAS
==============================

Interface:
- Jetpack Compose
- Material Design 3
- Accompanist (temas/anima√ß√µes)

Banco de Dados:
- Room

Concorr√™ncia:
- Coroutine
- Flow

Agendamento:
- AlarmManager
- BroadcastReceiver
- WorkManager (como fallback)

Terminal:
- libpty
- BusyBox
- ncurses
- zsh
- Nano empacotado ou compilado embutido

Root:
- libsu
- RootTools

Redes e atualiza√ß√µes:
- OkHttp
- Retrofit
- Gson/Moshi

Seguran√ßa:
- Jetpack Security
- Biometria e criptografia local

Gr√°ficos:
- MPAndroidChart

Testes:
- JUnit
- Espresso
- Mockito/Kluent

==============================
DIRET√ìRIOS DO PROJETO
==============================

üìÅ app/src/main/java/com/tcron/app/
 ‚î£ ui/              ‚Üí Telas do app
 ‚î£ viewmodel/       ‚Üí ViewModels
 ‚î£ data/            ‚Üí DAOs e Reposit√≥rios
 ‚î£ model/           ‚Üí Models e entidades
 ‚î£ terminal/        ‚Üí Terminal embutido
 ‚î£ scripts/         ‚Üí Manipula√ß√£o e execu√ß√£o
 ‚î£ utils/           ‚Üí Fun√ß√µes auxiliares

üìÅ res/
 ‚î£ layout/          ‚Üí Layouts XML (fallback)
 ‚î£ drawable/        ‚Üí √çcones e gr√°ficos
 ‚î£ values/          ‚Üí Strings e temas
 ‚î£ xml/             ‚Üí Navega√ß√£o e prefer√™ncias

==============================
FUNCIONALIDADES EXTRAS
==============================

- Exporta√ß√£o/Importa√ß√£o de tarefas (.json/.xml)
- Backup local autom√°tico criptografado
- Execu√ß√£o ap√≥s rein√≠cio do sistema
- Modo Sandbox para teste de scripts
- Scripts combinados Shell + Python
- Logs por tarefa (.log, .txt)
- Reuso de componentes visuais
- Diagn√≥stico do sistema

==============================
EXECU√á√ÉO DO PROJETO
==============================

1. Criar wireframes e fluxogramas das telas
2. Configurar projeto no Android Studio com arquitetura MVVM
3. Implementar terminal embutido funcional
4. Criar telas individuais para cada fun√ß√£o principal
5. Integrar Room e l√≥gica de agendamento com AlarmManager
6. Implementar sistema de permiss√µes e criptografia
7. Realizar testes unit√°rios e instrumentais
8. Otimizar desempenho para dispositivos com pouca bateria
9. Documentar o app internamente (dev e usu√°rio)
10. Empacotar scripts e interface para tablets e celulares
